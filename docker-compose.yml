
services:
  # MySQL service:
  database-service:
    # Image name to create from Dockerfile:
    image: yasmeenq/wanderlust-database-image:1.0

    # Where is the location of the Dockerfile:
    build: ./Database

    # Container name to create:
    container_name: wanderlust-database-container

    # Named-volume for MySQL folder:
    volumes:
      - wanderlust-volume:/var/lib/mysql

    # Environment variables needed by MySQL for creating the database:
    environment:
      MYSQL_DATABASE: vacations.02 # What is the database name.
      MYSQL_ROOT_PASSWORD: 1234 # Additional password needed internally by MySQL.

    # What to do if the container crashes:
    restart: unless-stopped # Restart when crashes, unless we stopped it.

    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 160

    ports:
      - 3306:3306

  # ------------------------------------------------------------------------------------------

  # Django service (application):
  django-service:
    # On which service we're depending on - for running and shutting-down order:
    depends_on:
      database-service:
        condition: service_healthy

    # Image name to create from Dockerfile:
    image: yasmeenq/wanderlust-django-image:1.0

    # Where is the location of the Dockerfile:
    build: ./wanderlust_django

    # Container name to create:
    container_name: wanderlust-django-container

    # Environment variables needed by our backend project for connecting to MySQL located in another container!
    environment:
      MYSQL_HOST: database-service # Service name is the computer name on the network.
      MYSQL_USER: root # Inventing a database user.
      MYSQL_PASSWORD: 1234 # Inventing a database password.
      MYSQL_DATABASE: vacations.02 # What is the database name.

    # What to do if the container crashes:
    restart: unless-stopped # Restart when crashes, unless we stopped it.

    # Port mapping (host:container)
    ports:
      - 8000:8000


  # ------------------------------------------------------------------------------------------

  # React service:
  react-service:
    # On which service we're depending on - for running and shutting-down order:
    depends_on:
      - django-service

    # Image name to create from Dockerfile:
    image: yasmeenq/wanderlust-react-image:1.0

    # Where is the location of the Dockerfile:
    build: ./wanderlust_react

    # Container name to create:
    container_name: wanderlust-react-container

    # What to do if the container crashes:
    restart: unless-stopped # Restart when crashes, unless we stopped it.

    # Port mapping (host:container)
    ports:
      - 80:3000

# ------------------------------------------------------------------------------------------

# List all the named-volumes:
volumes:
  wanderlust-volume:
